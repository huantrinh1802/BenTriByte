name: Deploy SvelteKit Static site to Pages

on:
  # Runs on pushes targeting the default branch
  workflow_run:
    workflows: ['CI']
    branches: [main]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  BUILD_PATH: './apps/website' # default value when not using subfolders
  # BUILD_PATH: subfolder

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
      - uses: actions/setup-node@v4.0.1
        with:
          node-version: '20.x'
          cache: pnpm
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build SvelteKit
        run: pnpm build
        working-directory: ${{ env.BUILD_PATH }}
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
          PUBLIC_SITE_URL: ${{ steps.pages.outputs.base_url }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.BUILD_PATH }}/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/deploy-pages@v1
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
